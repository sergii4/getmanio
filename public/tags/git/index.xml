<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on Sergii Getman</title>
    <link>https://example.com/tags/git/</link>
    <description>Recent content in git on Sergii Getman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 29 Mar 2020 20:14:27 +0300</lastBuildDate>
    
	<atom:link href="https://example.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker, go modules and private repos</title>
      <link>https://example.com/posts/docker-go-mod-cache/</link>
      <pubDate>Sun, 29 Mar 2020 20:14:27 +0300</pubDate>
      
      <guid>https://example.com/posts/docker-go-mod-cache/</guid>
      <description>Go modules change the way we work with dependency not only locally but in Docker(CI) as well. #more First problem we face is caching dependency. It resolves quite simple as docker layer:
 When building an image, Docker steps through the instructions in your Dockerfile, executing each in the order specified. As each instruction is examined, Docker looks for an existing image in its cache that it can reuse, rather than creating a new (duplicate) image.</description>
    </item>
    
  </channel>
</rss>